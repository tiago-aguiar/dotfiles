" plugins
call plug#begin()
Plug 'morhetz/gruvbox'
Plug 'srcery-colors/srcery-vim'
Plug 'terryma/vim-multiple-cursors' "<C-n> to replace all selected ocurr
Plug 'sheerun/vim-polyglot' " a collection of language packs for Vim.
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' } " fzf finder
Plug 'junegunn/fzf.vim' " fzf finder
Plug 'ncm2/ncm2' " nvim completion manager
Plug 'roxma/nvim-yarp'
Plug 'ncm2/ncm2-bufword'
Plug 'ncm2/ncm2-tmux'
Plug 'ncm2/ncm2-path'
Plug 'Chiel92/vim-autoformat'
Plug 'johngrib/vim-game-snake'
Plug 'scrooloose/nerdtree'

" enable ncm2 for all buffers
autocmd BufEnter * call ncm2#enable_for_buffer()
set completeopt=noinsert,menuone

Plug 'ncm2/ncm2-tern', { 'do': 'npm install' } " javascript completion (need to install node before this)
Plug 'w0rp/ale' " lint chekcer
Plug 'jiangmiao/auto-pairs' " auto bracket
Plug 'SirVer/ultisnips' " snippet code
Plug 'honza/vim-snippets' " repository with snippet files
Plug 'tpope/vim-obsession' " save session
Plug 'vim-airline/vim-airline' " status bar
Plug 'vim-airline/vim-airline-themes' " status theme
Plug 'benmills/vimux' " VimuxRunCommand(\"ls\") run command another pane tmux
Plug 'xolox/vim-misc' " used for switcher colorscheme
Plug 'xolox/vim-colorscheme-switcher' " switch coloscheme to test
Plug 'dart-lang/dart-vim-plugin' " for flutter
Plug 'thosakwe/vim-flutter' " for flutter

if has('nvim') " async frameworks completion
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'Shougo/deoplete.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif

Plug 'zchee/deoplete-jedi' " autocomplete for python with deoplete async
Plug 'natebosch/vim-lsc'

call plug#end()

" Some of these key choices were arbitrary;
" it's just an example.
nnoremap <leader>fa :FlutterRun<cr>
nnoremap <leader>fq :FlutterQuit<cr>
nnoremap <leader>fr :FlutterHotReload<cr>
nnoremap <leader>fR :FlutterHotRestart<cr>
nnoremap <leader>fD :FlutterVisualDebug<cr>

noremap <F3> :Autoformat<CR>

" default
syntax on
filetype plugin indent on

set t_Co=256

set background=dark
set encoding=utf8
set fillchars=vert:\â”‚ 
autocmd ColorScheme * highlight VertSplit cterm=NONE ctermfg=Black ctermbg=NONE

set hidden
set number
set relativenumber
set mouse=c
set shiftwidth=4
set tabstop=4
set expandtab
set noswapfile
"set termguicolors
let mapleader="\<Space>"
set laststatus=2
set rtp+=/usr/share/powerline/bindings/vim/

colorscheme srcery

nnoremap <leader>; A;<esc>

nnoremap <leader><F1> :mksession!<cr>
nnoremap <leader><F10> :e ~/.vimrc<cr>
nnoremap <leader><F12> :source %<cr>

nnoremap <leader>f :Files<cr>
nnoremap <leader>b :Buffers<cr>
nnoremap <leader>s :Ag<space>
nnoremap <leader>k :bd<cr>
nnoremap <leader><TAB> :NERDTreeToggle<cr>

nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

nnoremap <C-S-j> <C-e>
nnoremap <C-S-k> <C-y>

" gui stuff
if !exists('g:airline_symbols') " incompatible powerline symbols for Inziu Iosevka font
  let g:airline_symbols = {}
endif
let g:airline_theme='srcery'
let g:colorscheme_switcher_define_mappings = 1 " change colorscheme with F8 and SHIFT-F8
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
let g:airline_symbols.linenr = " " "font https://github.com/vim-airline/vim-airline/issues/1397
let g:airline_symbols.whitespace = " "
let g:airline#extensions#tabline#formatter = 'unique_tail'


" python stuff
let g:deoplete#enable_at_startup = 1

let g:python3_host_prog = '/usr/bin/python3'

let g:deoplete#sources#jedi#show_docstring = 1 " deoplete jedi (python)

" to use Ag system search
let $FZF_DEFAULT_COMMAND = 'ag -g ""'

" ncm2 configs
inoremap <c-c> <ESC>
inoremap <expr> <tab> pumvisible() ? "\<c-n>" : "\<tab>"
inoremap <expr> <S-Tab> (pumvisible() ? "\<C-p>" : "\<S-Tab>")

" vimux configs
nnoremap <F5> :call VimuxRunCommand("nodemon inspect index.js")<cr>

let g:ale_python_flake8_executable = 'python3'   " or 'python' for Python 2
let g:ale_python_flake8_options = '-m flake8'
let g:ale_linters = {'cpp': []}

" snippets configs
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
let g:UltiSnipsEditSplit="vertical"
let g:UltiSnipsSnippetsDir="~/.config/nvim/UltiSnips"

let g:lsc_server_commands = {'dart': 'dart_language_server'}

let t:is_transparent = 0
function! Toggle_transparent()
	if t:is_transparent == 0
		hi Normal guibg=NONE ctermbg=NONE
		let t:is_transparent = 1
	else
		set background=dark
		let t:is_tranparent = 0
	endif
endfunction
nnoremap <C-t> : call Toggle_transparent()<CR>

" put this in your .vimrc
set wildignore+=*.pyc,__pycache__,*.o,*.obj,*.svn,*.swp,*.class,*.hg,*.DS_Store,*.min.*

" Nerdtree config for wildignore
let NERDTreeRespectWildIgnore=1
