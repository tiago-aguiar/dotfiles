" plugins
call plug#begin()
Plug 'morhetz/gruvbox'
Plug 'chriskempson/base16-vim'
Plug 'terryma/vim-multiple-cursors' "<C-n>
Plug 'sheerun/vim-polyglot'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'ncm2/ncm2'
Plug 'roxma/nvim-yarp'
Plug 'ncm2/ncm2-bufword'
Plug 'ncm2/ncm2-tmux'
Plug 'ncm2/ncm2-path'
Plug 'ncm2/ncm2-tern',  {'do': 'npm install'} "javascript
Plug 'w0rp/ale'
Plug 'jiangmiao/auto-pairs'
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
Plug 'tpope/vim-obsession'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'benmills/vimux'
call plug#end()

" for terminal default font use #F9D8B4
syntax on
colorscheme base16-black-metal-bathory
set background=dark
let g:gruvbox_termcolors=256

let g:airline_theme='simple'
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

" incompatible powerline symbols for Inziu Iosevka font
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

" font https://github.com/vim-airline/vim-airline/issues/1397
let g:airline_symbols.linenr = " " 
let g:airline_symbols.whitespace = " "
let g:airline#extensions#tabline#formatter = 'unique_tail'

set hidden
set number
" set relativenumber
set mouse=c
set shiftwidth=4
set tabstop=4
set noswapfile
set termguicolors

" to use Ag system search
let $FZF_DEFAULT_COMMAND = 'ag -g ""'

let mapleader="\<Space>"

nnoremap <leader>; A;<esc>

" <cr> means <Enter>
nnoremap <leader><F1> :mksession!<cr> " save session
nnoremap <leader><F10> :e ~/.vimrc<cr>
nnoremap <leader><F12> :source %<cr>

nnoremap <leader>f :Files<cr>
nnoremap <leader>b :Buffers<cr>
nnoremap <leader>s :Ag<space>
nnoremap <leader>k :bd<cr>

nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

nnoremap <C-S-j> <C-e>
nnoremap <C-S-k> <C-y>

nnoremap <F5> :call VimuxRunCommand("node inspect index.js")<cr>

" ncm2 configurations
inoremap <c-c> <ESC>

inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"




" Shortcuts
" <C-n>			select all words occur and replace with c or delete with d

let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
let g:UltiSnipsEditSplit="vertical"
let g:UltiSnipsSnippetsDir="~/.config/nvim/UltiSnips"

" enable ncm2 for all buffers
autocmd BufEnter * call ncm2#enable_for_buffer()
set completeopt=noinsert,menuone,noselect
